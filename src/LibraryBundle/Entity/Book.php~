<?php

namespace LibraryBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Book
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="LibraryBundle\Entity\BookRepository")
 */
class Book
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var string
     *
     * @ORM\Column(name="toc", type="text")
     * @Assert\NotBlank()
     */
    private $toc;

    /**
     * @var boolean
     *
     * @ORM\Column(name="isNew", type="boolean")
     */
    private $isNew;

    /**
      * @Gedmo\Slug(fields={"title"})
      * @ORM\Column(length=255, unique=true)
      */
    private $slug;

    /**
     *
     * @ORM\ManyToOne(targetEntity="LibraryBundle\Entity\Author", inversedBy="books")
     * @ORM\JoinColumn(nullable=false)
     */
    private $author;

    /**
     *
     * @ORM\ManyToOne(targetEntity="LibraryBundle\Entity\Category", inversedBy="books")
     * @ORM\JoinColumn(nullable=false)
     */
    private $category;

    /**
     *
     * @ORM\OneToMany(targetEntity="LibraryBundle\Entity\Loan", mappedBy="book", cascade={"remove"})
     */
    private $loans;

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     *
     * @return Book
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set toc
     *
     * @param string $toc
     *
     * @return Book
     */
    public function setToc($toc)
    {
        $this->toc = $toc;

        return $this;
    }

    /**
     * Get toc
     *
     * @return string
     */
    public function getToc()
    {
        return $this->toc;
    }

    /**
     * Set isNew
     *
     * @param boolean $isNew
     *
     * @return Book
     */
    public function setIsNew($isNew)
    {
        $this->isNew = $isNew;

        return $this;
    }

    /**
     * Get isNew
     *
     * @return boolean
     */
    public function getIsNew()
    {
        return $this->isNew;
    }

    /**
     * Set slug
     *
     * @param string $slug
     *
     * @return Book
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set author
     *
     * @param \LibraryBundle\Entity\Author $author
     *
     * @return Book
     */
    public function setAuthor(\LibraryBundle\Entity\Author $author)
    {
        $this->author = $author;

        return $this;
    }

    /**
     * Get author
     *
     * @return \LibraryBundle\Entity\Author
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * Set category
     *
     * @param \LibraryBundle\Entity\Category $category
     *
     * @return Book
     */
    public function setCategory(\LibraryBundle\Entity\Category $category)
    {
        $this->category = $category;

        return $this;
    }

    /**
     * Get category
     *
     * @return \LibraryBundle\Entity\Category
     */
    public function getCategory()
    {
        return $this->category;
    }

    public function isBorrowed()
    {
        /*$loan = $this->getLoan();
        if(!isset($loan) || $loan->getOnGoing() != false)
        {
            return false;
        }
        else
        {
            return true;
        }*/
    }
}
